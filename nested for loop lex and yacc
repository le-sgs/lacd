LEX
%{
	#include<stdio.h>
	#include "y.tab.h"
%}
%%
for {return FOR;}
[(] {return LSMALL;}
[)] {return RSMALL;}
[{] {return LBIG;}
[}] {return RBIG;}
int|char|double|float {return TYPE;}
[a-zA-Z_][a-zA-Z0-9_]* {return ID;}
[=] {return EQ;}
[0-9]+ {return DIGIT;}
[;] {return COMMA;}
[<>] {return COMP;}
[<>][=] {return COMP;}
[+][+]|[-][-] {return UPD;}
[\n] {return 0;}
[ ] {}
%%
int yywrap()
{	
	return 1;
}

YACC
%{
	#include<stdio.h>
	int valid=1;
%}
%token FOR LSMALL TYPE ID EQ COMMA COMP DIGIT UPD RSMALL LBIG RBIG
%%
FORSTMT:FOR LSMALL TYPE ID EQ DIGIT COMMA ID COMP DIGIT COMMA ID UPD RSMALL LBIG FORSTMT RBIG|
%%
int yyerror()
{
	valid=0;
	printf("INVALID EXP\n");
}
int main()
{
	yyparse();
	if(valid)
	{
		printf("VALID\n");
	}
	return 0;
}
